name: Docker
on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  publish-images:
    strategy:
      max-parallel: 5
      matrix:
        name: [fb-ubuntu, fb-winserver, fb-nanoserver, fb-uewindows]
        include:
        - os: ubuntu-latest
          base: ubuntu
          file: Dockerfile
          variant: latest
          name: fb-ubuntu
          tag: ghcr.io/${{ github.repository }}:${{ matrix.name }}-${{ github.event.release.tag_name || 'latest' }}
          docker: docker buildx
        - os: windows-latest
          base: mcr.microsoft.com/windows/server
          file: win.Dockerfile
          name: fb-winserver
          variant: ltsc2022
          tag: ghcr.io/${{ github.repository }}:${{ matrix.name }}-${{ github.event.release.tag_name || 'latest' }}
          docker: docker
        - os: windows-latest
          base: mcr.microsoft.com/windows/nanoserver
          file: win.Dockerfile
          name: fb-nanoserver
          variant: ltsc2022
          tag: ghcr.io/${{ github.repository }}:${{ matrix.name }}-${{ github.event.release.tag_name || 'latest' }}
          docker: docker
        - os: windows-latest
          base: ghcr.io/epicgames/unreal-engine
          file: win.Dockerfile
          name: fb-uewindows
          variant: runtime-windows
          tag: ghcr.io/${{ github.repository }}:${{ matrix.name }}-${{ github.event.release.tag_name || 'latest' }}
          docker: docker
    runs-on: ${{ matrix.os }}
    steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Log into registry ${{ env.REGISTRY }}
          if: github.event_name != 'pull_request'
          uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GH_PAT }}

        - name: Docker Build
          run: |
            ${{ matrix.docker }} build --file ${{ matrix.file }} --build-arg BASEIMAGE=${{ matrix.base }} --build-arg VARIANT=${{ matrix.variant }} -t ${{ matrix.tag }} .
        - name: Docker Push
          run: |
            docker push ${{ matrix.tag }}
